__all__ = [
    'OperationType',
    'Operation',
    'AnalyticsOperation',
    'PoolOperation',
    'PoolArchiveOperation',
    'PoolCloneOperation',
    'PoolCloseOperation',
    'PoolOpenOperation',
    'TrainingOperation',
    'TrainingArchiveOperation',
    'TrainingCloneOperation',
    'TrainingCloseOperation',
    'TrainingOpenOperation',
    'ProjectArchiveOperation',
    'TasksCreateOperation',
    'TaskSuiteCreateBatchOperation',
    'AggregatedSolutionOperation',
    'UserBonusCreateBatchOperation',
]
import datetime
import toloka.client.primitives.base
import toloka.util._extendable_enum
import typing


class OperationType(toloka.util._extendable_enum.ExtendableStrEnum):
    """An enumeration.
    """

    PSEUDO = 'PSEUDO.PSEUDO'
    ANALYTICS = 'ANALYTICS'
    KNOWN_SOLUTIONS_GENERATE = 'KNOWN_SOLUTIONS.GENERATE'
    POOL_ARCHIVE = 'POOL.ARCHIVE'
    POOL_CLONE = 'POOL.CLONE'
    POOL_CLOSE = 'POOL.CLOSE'
    POOL_OPEN = 'POOL.OPEN'
    PROJECT_ARCHIVE = 'PROJECT.ARCHIVE'
    SOLUTION_AGGREGATE = 'SOLUTION.AGGREGATE'
    TASK_BATCH_CREATE = 'TASK.BATCH_CREATE'
    TASK_SUITE_BATCH_CREATE = 'TASK_SUITE.BATCH_CREATE'
    TRAINING_ARCHIVE = 'TRAINING.ARCHIVE'
    TRAINING_CLONE = 'TRAINING.CLONE'
    TRAINING_CLOSE = 'TRAINING.CLOSE'
    TRAINING_OPEN = 'TRAINING.OPEN'
    USER_BONUS_BATCH_CREATE = 'USER_BONUS.BATCH_CREATE'


class Operation(toloka.client.primitives.base.BaseTolokaObject):
    """A base class for Toloka operations.

    Some API requests start asynchronous operations in Toloka. Classes derived from `Operation` are used to track them.
    The examples of asynchronous operations are opening a pool, archiving a project, loading multiple tasks.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        parameters: Parameters of the request that started the operation.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
    """

    class Status(toloka.util._extendable_enum.ExtendableStrEnum):
        """The status of an operation.

        Attributes:
            PENDING: The operation is not started yet.
            RUNNING: The operation is in progress.
            SUCCESS: The operation completed successfully.
            FAIL: The operation completed with errors.
        """

        PENDING = 'PENDING'
        RUNNING = 'RUNNING'
        SUCCESS = 'SUCCESS'
        FAIL = 'FAIL'

    class Parameters(toloka.client.primitives.base.BaseTolokaObject):
        """A base class for operation parameters.
        """

        def __init__(self) -> None:
            """Method generated by attrs for class Operation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]

    def is_completed(self):
        """Checks whether the operation is completed either successfully or not.
        """
        ...

    def raise_on_fail(self):
        """Raises `FailedOperation` exception if the operation status is `FAIL`. Otherwise does nothing.
        """
        ...

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        parameters: typing.Optional[Parameters] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None
    ) -> None:
        """Method generated by attrs for class Operation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class AnalyticsOperation(Operation):
    """Analytics operation.

    The operation is returned by the [get_analytics](toloka.client.TolokaClient.get_analytics.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        parameters: Parameters of the request that started the operation.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        parameters: typing.Optional[Operation.Parameters] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None
    ) -> None:
        """Method generated by attrs for class AnalyticsOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Operation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class PoolOperation(Operation):
    """A base class for pool operations.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the pool.
    """

    class Parameters(Operation.Parameters):
        def __init__(self, *, pool_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class PoolOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        pool_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[Parameters] = None
    ) -> None:
        """Method generated by attrs for class PoolOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class PoolArchiveOperation(PoolOperation):
    """Pool archiving operation.

    The operation is returned by the [archive_pool_async](toloka.client.TolokaClient.archive_pool_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the pool.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[PoolOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class PoolArchiveOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[PoolOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class PoolCloneOperation(PoolOperation):
    """Pool cloning operation.

    The operation is returned by the [clone_pool_async](toloka.client.TolokaClient.clone_pool_async.md) method.

    Note, that `parameters.pool_id` contains the ID of the pool that is cloned.
    While `details.pool_id` contains the ID of the new pool created after cloning.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        parameters: Parameters containing the ID of the pool.
        details: The details of the operation.
    """

    class Details(PoolOperation.Parameters):
        """Attributes:
            pool_id: The ID of the new pool created after cloning.
        """

        def __init__(self, *, pool_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class PoolCloneOperation.Details.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        pool_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        parameters: typing.Optional[PoolOperation.Parameters] = None,
        details: typing.Optional[Details] = None
    ) -> None:
        """Method generated by attrs for class PoolCloneOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[PoolOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[Details]


class PoolCloseOperation(PoolOperation):
    """Pool closing operation.

    The operation is returned by the [close_pool_async](toloka.client.TolokaClient.close_pool_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the pool.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[PoolOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class PoolCloseOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[PoolOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class PoolOpenOperation(PoolOperation):
    """Pool opening operation.

    The operation is returned by the [open_pool_async](toloka.client.TolokaClient.open_pool_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the pool.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[PoolOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class PoolOpenOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[PoolOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TrainingOperation(Operation):
    """A base class for operations with trainings.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the training.
    """

    class Parameters(Operation.Parameters):
        """Attributes:
            training_id: The ID of the training.
        """

        def __init__(self, *, training_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class TrainingOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        training_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[Parameters] = None
    ) -> None:
        """Method generated by attrs for class TrainingOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TrainingArchiveOperation(TrainingOperation):
    """Training archiving operation.

    The operation is returned by the [archive_training_async](toloka.client.TolokaClient.archive_training_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the training.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[TrainingOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class TrainingArchiveOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[TrainingOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TrainingCloneOperation(TrainingOperation):
    """Training cloning operation.

    The operation is returned by the [clone_training_async](toloka.client.TolokaClient.clone_training_async.md) method.

    Note, that `parameters.training_id` contains the ID of the training that is cloned.
    While `details.training_id` contains the ID of the new training created after cloning.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        parameters: Parameters containing the ID of the training.
        details: The details of the operation.
    """

    class Details(TrainingOperation.Parameters):
        """Attributes:
            training_id: The ID of the new training created after cloning.
        """

        def __init__(self, *, training_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class TrainingCloneOperation.Details.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        training_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        parameters: typing.Optional[TrainingOperation.Parameters] = None,
        details: typing.Optional[Details] = None
    ) -> None:
        """Method generated by attrs for class TrainingCloneOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[TrainingOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[Details]


class TrainingCloseOperation(TrainingOperation):
    """Training closing operation.

    The operation is returned by the [close_training_async](toloka.client.TolokaClient.close_training_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the training.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[TrainingOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class TrainingCloseOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[TrainingOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TrainingOpenOperation(TrainingOperation):
    """Training opening operation.

    The operation is returned by the [open_training_async](toloka.client.TolokaClient.open_training_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the training.
    """

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[TrainingOperation.Parameters] = None
    ) -> None:
        """Method generated by attrs for class TrainingOpenOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[TrainingOperation.Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class ProjectArchiveOperation(Operation):
    """Project archiving operation.

    The operation is returned by the [archive_project_async](toloka.client.TolokaClient.archive_project_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters with the ID of the project.
    """

    class Parameters(Operation.Parameters):
        """Attributes:
            project_id: The ID of the project.
        """

        def __init__(self, *, project_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class ProjectArchiveOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        project_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[Parameters] = None
    ) -> None:
        """Method generated by attrs for class ProjectArchiveOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TasksCreateOperation(Operation):
    """Task creating operation.

    The operation is returned by the [create_tasks_async](toloka.client.TolokaClient.create_tasks_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        progress: The operation progress as a percentage.
        parameters: Parameters passed to the `create_tasks_async` method.
        finished: The UTC date and time when the operation was completed.
        details: Details of the operation completion.
    """

    class Parameters(Operation.Parameters):
        """Parameters passed to the [create_tasks_async](toloka.client.TolokaClient.create_tasks_async.md) method.

        Attributes:
            skip_invalid_items: Task validation parameter.
            allow_defaults: Active overlap parameter.
            open_pool: Opening the pool immediately.
        """

        def __init__(
            self,
            *,
            skip_invalid_items: typing.Optional[bool] = None,
            allow_defaults: typing.Optional[bool] = None,
            open_pool: typing.Optional[bool] = None
        ) -> None:
            """Method generated by attrs for class TasksCreateOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        skip_invalid_items: typing.Optional[bool]
        allow_defaults: typing.Optional[bool]
        open_pool: typing.Optional[bool]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        parameters: typing.Optional[Parameters] = None,
        finished: typing.Optional[datetime.datetime] = None,
        details: typing.Optional[typing.Any] = None
    ) -> None:
        """Method generated by attrs for class TasksCreateOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class TaskSuiteCreateBatchOperation(Operation):
    """Task suite creating operation.

    The operation is returned by the [create_task_suites_async](toloka.client.TolokaClient.create_task_suites_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        progress: The operation progress as a percentage.
        parameters: Parameters passed to the `create_task_suites_async` method.
        finished: The UTC date and time when the operation was completed.
        details: Details of the operation completion.
    """

    class Parameters(Operation.Parameters):
        """Parameters passed to the [create_task_suites_async](toloka.client.TolokaClient.create_task_suites_async.md) method.

        Attributes:
            skip_invalid_items: Task validation parameter.
            allow_defaults: Active overlap parameter.
            open_pool: Opening the pool immediately.
        """

        def __init__(
            self,
            *,
            skip_invalid_items: typing.Optional[bool] = None,
            allow_defaults: typing.Optional[bool] = None,
            open_pool: typing.Optional[bool] = None
        ) -> None:
            """Method generated by attrs for class TaskSuiteCreateBatchOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        skip_invalid_items: typing.Optional[bool]
        allow_defaults: typing.Optional[bool]
        open_pool: typing.Optional[bool]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        parameters: typing.Optional[Parameters] = None,
        finished: typing.Optional[datetime.datetime] = None,
        details: typing.Optional[typing.Any] = None
    ) -> None:
        """Method generated by attrs for class TaskSuiteCreateBatchOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class AggregatedSolutionOperation(Operation):
    """Response aggregation operation.

    The operation is returned by the [aggregate_solutions_by_pool](toloka.client.TolokaClient.aggregate_solutions_by_pool.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        details: Details of the operation completion.
        parameters: Parameters containing the ID of the pool.
    """

    class Parameters(Operation.Parameters):
        def __init__(self, *, pool_id: typing.Optional[str] = None) -> None:
            """Method generated by attrs for class AggregatedSolutionOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        pool_id: typing.Optional[str]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        details: typing.Optional[typing.Any] = None,
        parameters: typing.Optional[Parameters] = None
    ) -> None:
        """Method generated by attrs for class AggregatedSolutionOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[typing.Any]


class UserBonusCreateBatchOperation(Operation):
    """Issuing payments operation.

    The operation is returned by the [create_user_bonuses_async](toloka.client.TolokaClient.create_user_bonuses_async.md) method.

    Attributes:
        id: The ID of the operation.
        status: The status of the operation.
        submitted: The UTC date and time when the operation was requested.
        started: The UTC date and time when the operation started.
        finished: The UTC date and time when the operation finished.
        progress: The operation progress as a percentage.
        parameters: Parameters of the `create_user_bonuses_async` request that started the operation.
        details: The details of the operation.
    """

    class Parameters(Operation.Parameters):
        def __init__(self, *, skip_invalid_items: typing.Optional[bool] = None) -> None:
            """Method generated by attrs for class UserBonusCreateBatchOperation.Parameters.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        skip_invalid_items: typing.Optional[bool]

    class Details(PoolOperation.Parameters):
        """The details of the `UserBonusCreateBatchOperation` operation.

        Attributes:
            total_count: The total number of `UserBonus` objects in the request.
            valid_count: The number of `UserBonus` objects that passed validation.
            not_valid_count: The number of `UserBonus` objects that didn't pass validation.
            success_count: The number of `UserBonus` that were issued to Tolokers.
            failed_count: The number of `UserBonus` that were not issued to Tolokers.
        """

        def __init__(
            self,
            *,
            pool_id: typing.Optional[str] = None,
            total_count: typing.Optional[int] = None,
            valid_count: typing.Optional[int] = None,
            not_valid_count: typing.Optional[int] = None,
            success_count: typing.Optional[int] = None,
            failed_count: typing.Optional[int] = None
        ) -> None:
            """Method generated by attrs for class UserBonusCreateBatchOperation.Details.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        pool_id: typing.Optional[str]
        total_count: typing.Optional[int]
        valid_count: typing.Optional[int]
        not_valid_count: typing.Optional[int]
        success_count: typing.Optional[int]
        failed_count: typing.Optional[int]

    def __init__(
        self,
        *,
        id: typing.Optional[str] = None,
        status: typing.Union[Operation.Status, str, None] = None,
        submitted: typing.Optional[datetime.datetime] = None,
        started: typing.Optional[datetime.datetime] = None,
        finished: typing.Optional[datetime.datetime] = None,
        progress: typing.Optional[int] = None,
        parameters: typing.Optional[Parameters] = None,
        details: typing.Optional[Details] = None
    ) -> None:
        """Method generated by attrs for class UserBonusCreateBatchOperation.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    id: typing.Optional[str]
    status: typing.Optional[Operation.Status]
    submitted: typing.Optional[datetime.datetime]
    parameters: typing.Optional[Parameters]
    started: typing.Optional[datetime.datetime]
    finished: typing.Optional[datetime.datetime]
    progress: typing.Optional[int]
    details: typing.Optional[Details]
