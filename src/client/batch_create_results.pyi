__all__ = [
    'FieldValidationError',
    'TaskBatchCreateResult',
    'TaskSuiteBatchCreateResult',
    'UserBonusBatchCreateResult',
    'WebhookSubscriptionBatchCreateResult',
]
import toloka.client.primitives.base
import toloka.client.task
import toloka.client.task_suite
import toloka.client.user_bonus
import toloka.client.webhook_subscription
import typing


class FieldValidationError(toloka.client.primitives.base.BaseTolokaObject):
    """An error that contains information about an invalid field.

    Attributes:
        code: The error code.
        message: The error message.
        params: A list with additional parameters describing the error.
    """

    def __init__(
        self,
        *,
        code: typing.Optional[str] = None,
        message: typing.Optional[str] = None,
        params: typing.Optional[typing.List[typing.Any]] = None
    ) -> None:
        """Method generated by attrs for class FieldValidationError.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    code: typing.Optional[str]
    message: typing.Optional[str]
    params: typing.Optional[typing.List[typing.Any]]


class TaskBatchCreateResult(toloka.client.primitives.base.BaseTolokaObject):
    """The result of a task creation.

    `TaskBatchCreateResult` is returned by the [create_tasks](toloka.client.TolokaClient.create_tasks.md) method.

    Attributes:
        items: A dictionary with created tasks. The indexes of a `create_tasks` input list are used as keys in the dictionary.
        validation_errors: A dictionary with validation errors in input tasks. It is filled if the request parameter `skip_invalid_items` is `True`.
    """

    def __init__(
        self,
        *,
        items: typing.Optional[typing.Dict[str, toloka.client.task.Task]] = None,
        validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]] = None
    ) -> None:
        """Method generated by attrs for class TaskBatchCreateResult.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    items: typing.Optional[typing.Dict[str, toloka.client.task.Task]]
    validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]]


class TaskSuiteBatchCreateResult(toloka.client.primitives.base.BaseTolokaObject):
    """The result of a task suite creation.

    `TaskSuiteBatchCreateResult` is returned by the [create_task_suites](toloka.client.TolokaClient.create_task_suites.md) method.

    Attributes:
        items: A dictionary with created task suites. The indexes of a `create_task_suites` input list are used as keys in the dictionary.
        validation_errors: A dictionary with validation errors in input task suites. It is filled if the request parameter `skip_invalid_items` is `True`.
    """

    def __init__(
        self,
        *,
        items: typing.Optional[typing.Dict[str, toloka.client.task_suite.TaskSuite]] = None,
        validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]] = None
    ) -> None:
        """Method generated by attrs for class TaskSuiteBatchCreateResult.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    items: typing.Optional[typing.Dict[str, toloka.client.task_suite.TaskSuite]]
    validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]]


class UserBonusBatchCreateResult(toloka.client.primitives.base.BaseTolokaObject):
    """The result of issuing bonuses for Tolokers.

    `UserBonusBatchCreateResult` is returned by the [create_user_bonuses](toloka.client.TolokaClient.create_user_bonuses.md) method.

    Attributes:
        items: A dictionary with created bonuses. The indexes of a `create_user_bonuses` input list are used as keys in the dictionary.
        validation_errors: A dictionary with validation errors. It is filled if the request parameter `skip_invalid_items` is `True`.
    """

    def __init__(
        self,
        *,
        items: typing.Optional[typing.Dict[str, toloka.client.user_bonus.UserBonus]] = None,
        validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]] = None
    ) -> None:
        """Method generated by attrs for class UserBonusBatchCreateResult.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    items: typing.Optional[typing.Dict[str, toloka.client.user_bonus.UserBonus]]
    validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]]


class WebhookSubscriptionBatchCreateResult(toloka.client.primitives.base.BaseTolokaObject):
    """The result of creating webhook subscriptions.

    `WebhookSubscriptionBatchCreateResult` is returned by the [upsert_webhook_subscriptions](toloka.client.TolokaClient.upsert_webhook_subscriptions.md) method.

    Attributes:
        items: A dictionary with created subscriptions. The indexes of a `upsert_webhook_subscriptions` input list are used as keys in the dictionary.
        validation_errors: A dictionary with validation errors.
    """

    def __init__(
        self,
        *,
        items: typing.Optional[typing.Dict[str, toloka.client.webhook_subscription.WebhookSubscription]] = None,
        validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]] = None
    ) -> None:
        """Method generated by attrs for class WebhookSubscriptionBatchCreateResult.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    items: typing.Optional[typing.Dict[str, toloka.client.webhook_subscription.WebhookSubscription]]
    validation_errors: typing.Optional[typing.Dict[str, typing.Dict[str, FieldValidationError]]]
