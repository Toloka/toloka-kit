from toloka.client.primitives.base import BaseTolokaObject
from toloka.client.project.field_spec import FieldSpec
from toloka.client.project.view_spec import ViewSpec
from typing import (
    Any,
    Dict,
    Optional
)

class TaskSpec(BaseTolokaObject):
    """Parameters for input and output data and the task interface.

    Attributes:
        input_spec: The input data parameters for tasks. The complete list of parameters is shown in the
            Input and output data table.
        output_spec: Parameters for output data from the input fields. The complete list of parameters is
            shown in the Input and output data table.
        view_spec: Description of the task interface.
    """

    def __init__(self, *, input_spec: Optional[Dict[str, FieldSpec]] = None, output_spec: Optional[Dict[str, FieldSpec]] = None, view_spec: Optional[ViewSpec] = None) -> None:
        """Method generated by attrs for class TaskSpec.
        """
        ...

    _unexpected: Optional[Dict[str, Any]]
    input_spec: Optional[Dict[str, FieldSpec]]
    output_spec: Optional[Dict[str, FieldSpec]]
    view_spec: Optional[ViewSpec]
