__all__ = [
    'BaseViewV1',
    'ActionButtonViewV1',
    'AlertViewV1',
    'AudioViewV1',
    'CollapseViewV1',
    'DeviceFrameViewV1',
    'DividerViewV1',
    'GroupViewV1',
    'IframeViewV1',
    'ImageViewV1',
    'LabeledListViewV1',
    'LinkViewV1',
    'LinkGroupViewV1',
    'ListViewV1',
    'MapViewV1',
    'MarkdownViewV1',
    'TextViewV1',
    'VideoViewV1',
]
import toloka.client.project.template_builder.base
import toloka.util._extendable_enum
import typing


class BaseViewV1Metaclass(toloka.client.project.template_builder.base.VersionedBaseComponentMetaclass):
    @staticmethod
    def __new__(
        mcs,
        name,
        bases,
        namespace,
        **kwargs
    ): ...


class BaseViewV1(toloka.client.project.template_builder.base.BaseComponent, metaclass=BaseViewV1Metaclass):
    """A base class for components that present data, such as a text, list, audio player, or image.

    Attributes:
        label: A label above the component.
        hint: A hint text.
        validation: Validation rules.
    """

    def __init__(
        self,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class BaseViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]


class ActionButtonViewV1(BaseViewV1):
    """A button that calls an action.

    For more information, see [view.action-button](https://toloka.ai/docs/template-builder/reference/view.action-button).

    Attributes:
        action: The action.
        hint: A hint text.
        label: A label on the button.
        validation: Validation rules.
    """

    def __init__(
        self,
        action: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ActionButtonViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    action: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]


class AlertViewV1(BaseViewV1):
    """A view used to highlight important information.

    For more information, see [view.alert](https://toloka.ai/docs/template-builder/reference/view.alert).

    Attributes:
        content: The content.
        theme: The theme that sets the background color. The default color is blue.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    class Theme(toloka.util._extendable_enum.ExtendableStrEnum):
        """A view background color.

        Attributes:
            INFO: Blue.
            SUCCESS: Green.
            WARNING: Yellow.
            DANGER: Red.
        """

        DANGER = 'danger'
        INFO = 'info'
        SUCCESS = 'success'
        WARNING = 'warning'

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Theme]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class AlertViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Theme]]


class AudioViewV1(BaseViewV1):
    """An audio player.

    For more information, see [view.audio](https://toloka.ai/docs/template-builder/reference/view.audio).

    Attributes:
        url: A link to the audio.
        loop: * `True` — Play audio in a loop.
            * `False` — Play once.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        url: typing.Optional[typing.Any] = None,
        *,
        loop: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class AudioViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    url: typing.Optional[typing.Any]
    loop: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class CollapseViewV1(BaseViewV1):
    """An expandable block.

    For more information, see [view.collapse](https://toloka.ai/docs/template-builder/reference/view.collapse).

    Attributes:
        content: The block content.
        label: The block heading.
        default_opened: Initial state of the block:
            `True` — Expanded
            `False` — Collapsed

            Default value: `False`.
        hint: A hint text.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        label: typing.Optional[typing.Any] = None,
        default_opened: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class CollapseViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    default_opened: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class DeviceFrameViewV1(BaseViewV1):
    """A view with a frame that is similar to a mobile phone frame.

    For more information, see [view.device-frame](https://toloka.ai/docs/template-builder/reference/view.device-frame).

    Attributes:
        content: The content of the frame.
        full_height: If `True`, the component takes up all the vertical free space.
            Note, that the minimum height required by the component is 400 pixels.
        max_width: The maximum width of the component in pixels.
        min_width: The minimum width of the component in pixels. It takes priority over the `max_width`.
        ratio: A list with the aspect ratio of the component. Specify the relative width first and then the relative height.
            This setting is not used if `full_height=True`.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class DeviceFrameViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]


class DividerViewV1(BaseViewV1):
    """A horizontal delimiter.

    For more information, see [view.divider](https://toloka.ai/docs/template-builder/reference/view.divider).

    Attributes:
        hint: A hint text.
        label: A label in the center of the delimiter. Note, that line breaks are not supported.
        validation: Validation rules.
    """

    def __init__(
        self,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class DividerViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]


class GroupViewV1(BaseViewV1):
    """A view with a frame.

    For more information, see [view.group](https://toloka.ai/docs/template-builder/reference/view.group).

        Attributes:
            content: A content.
            label: A header.
            hint: A hint. To insert a line break in the hint, use `
    `.

    Attributes:
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class GroupViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]


class IframeViewV1(BaseViewV1):
    """A frame displaying a web page.

    For more information, see [view.iframe](https://toloka.ai/docs/template-builder/reference/view.iframe).

    Attributes:
        url: The URL of the web page.
        full_height: If `True`, the component takes up all the vertical free space.
            Note, that the minimum height required by the component is 400 pixels.
        max_width: The maximum width of the component in pixels.
        min_width: The minimum width of the component in pixels. It takes priority over the `max_width`.
        ratio: A list with the aspect ratio of the component. Specify the relative width first and then the relative height.
            This setting is not used if `full_height=True`.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        url: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        *,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class IframeViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    url: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]


class ImageViewV1(BaseViewV1):
    """A component for displaying an image.

    For more information, see [view.image](https://toloka.ai/docs/template-builder/reference/view.image).

    Attributes:
        url: The URL of the image.
        full_height: If `True`, the component takes up all the vertical free space.
            Note, that the minimum height required by the component is 400 pixels.
        max_width: The maximum width of the component in pixels.
        min_width: The minimum width of the component in pixels. It takes priority over the `max_width`.
        no_border: Displaying borders around the image.
            * `True` — The borders are hidden.
            * `False` — The borders are visible.

            Default value: `True`.
        no_lazy_load: Loading mode:
            * `False` — The component starts loading the image when the component becomes visible to a Toloker.
            * `True` — The image is loaded immediately. This mode is useful for icons.

            Default value: `False` — lazy loading is enabled.
        popup: If `True`, a Toloker can open a full sized image in a popup. It is a default behavior.
        ratio: A list with the aspect ratio of the component. Specify the relative width first and then the relative height.
            This setting is not used if `full_height=True`.
        rotatable: If `True`, an image can be rotated.
        scrollable: The way of displaying an image which is larger than the component:
            * `True` — Scroll bars are shown.
            * `False` — The image is scaled to fit the component.

            Note, that images in SVG format with no size specified always fit the component.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        url: typing.Optional[typing.Any] = None,
        *,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        no_border: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        no_lazy_load: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        popup: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        rotatable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        scrollable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ImageViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    url: typing.Optional[typing.Any]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    no_border: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    no_lazy_load: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    popup: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]
    rotatable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    scrollable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class LabeledListViewV1(BaseViewV1):
    """A list of components with labels placed on the left.

    For more information, see [view.labeled-list](https://toloka.ai/docs/template-builder/reference/view.labeled-list).

    Attributes:
        items: List items.
        min_width: The minimum width of the component.
            If the width is less than the specified value, the list is displayed in compact mode.
            Labels are placed above the items in this mode.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    class Item(toloka.client.project.template_builder.base.BaseTemplate):
        """A labeled list item.

        Attributes:
            content: The content of the item.
            label: An item label.
            center_label: Label vertical alignment.
                * `True` — The label is centered.
                * `False` — The label is aligned to the top of the item content.

                Default value: `False`.
            hint: A hint.
        """

        def __init__(
            self,
            content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
            label: typing.Optional[typing.Any] = None,
            *,
            center_label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
            hint: typing.Optional[typing.Any] = None
        ) -> None:
            """Method generated by attrs for class LabeledListViewV1.Item.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
        label: typing.Optional[typing.Any]
        center_label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
        hint: typing.Optional[typing.Any]

    def __init__(
        self,
        items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Item]]]] = None,
        *,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class LabeledListViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Item]]]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]


class LinkViewV1(BaseViewV1):
    """A component showing a link.

    For more information, see [view.link](https://toloka.ai/docs/template-builder/reference/view.link).

    Attributes:
        url: A URL.
        content: A link text.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        url: typing.Optional[typing.Any] = None,
        *,
        content: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class LinkViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    url: typing.Optional[typing.Any]
    content: typing.Optional[typing.Any]


class LinkGroupViewV1(BaseViewV1):
    """A group of links.

    For more information, see [view.link-group](https://toloka.ai/docs/template-builder/reference/view.link-group).

    Attributes:
        links: A list of links.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.

    Examples:
        >>> import toloka.client.project.template_builder as tb
        >>> links = tb.view.LinkGroupViewV1(
        >>>     [
        >>>         tb.view.LinkGroupViewV1.Link(
        >>>             'https://any.com/useful/url/1',
        >>>             'Example1',
        >>>         ),
        >>>         tb.view.LinkGroupViewV1.Link(
        >>>             'https://any.com/useful/url/2',
        >>>             'Example2',
        >>>         ),
        >>>     ]
        >>> )
        ...
    """

    class Link(toloka.client.project.template_builder.base.BaseTemplate):
        """A link for the `LinkGroupViewV1`.

        Attributes:
            url: A URL.
            content: A link text.
            theme: The appearance of the link.
                If `theme` is omitted, the link is displayed as an underlined text.
                If `theme` is set to `primary`, a button is displayed.
        """

        def __init__(
            self,
            url: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            content: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            *,
            theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None
        ) -> None:
            """Method generated by attrs for class LinkGroupViewV1.Link.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        url: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        content: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]

    def __init__(
        self,
        links: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Link]]]] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class LinkGroupViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    links: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Link]]]]


class ListViewV1(BaseViewV1):
    """A list of components.

    For more information, see [view.list](https://toloka.ai/docs/template-builder/reference/view.list).

    Attributes:
        items: List items.
        direction: The direction of the list:
            * `vertical`
            * `horizontal`

            Default value: `vertical`.
        size: A spacing between list items:
            `m` — The default spacing.
            `s` — Narrower spacing.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]] = None,
        *,
        direction: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListDirection]] = None,
        size: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListSize]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ListViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]]
    direction: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListDirection]]
    size: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListSize]]


class MarkdownViewV1(BaseViewV1):
    """A component for formatting Markdown.

    The Markdown content must not contain line breaks. To insert them, place `
    ` in the text.
        Straight quotation marks must be escaped: `"`.

        For more information, see [view.markdown](https://toloka.ai/docs/template-builder/reference/view.markdown).

        Attributes:
            content: A text with Markdown.

        Example:
            Adding a title and description using Markdown.

            >>> import toloka.client.project.template_builder as tb
            >>> header = tb.view.MarkdownViewV1('# Some Header:
    ---
    Some detailed description')
            ...

    Attributes:
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[typing.Any] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class MarkdownViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[typing.Any]


class TextViewV1(BaseViewV1):
    """A view for displaying a text.

    For more information, see [view.text](https://toloka.ai/docs/template-builder/reference/view.text).

        Attributes:
            content: The text. To insert a new line, use `
    `.

        Example:
            >>> import toloka.client.project.template_builder as tb
            >>> text_view = tb.view.TextViewV1(tb.data.InputData('input_field_name'), label='My label:')
            ...

    Attributes:
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[typing.Any] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class TextViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[typing.Any]


class VideoViewV1(BaseViewV1):
    """A video player.

    For more information, see [view.video](https://toloka.ai/docs/template-builder/reference/view.video).

    Attributes:
        url: The video URL.
        full_height: If `True`, the component takes up all the vertical free space.
            Note, that the minimum height required by the component is 400 pixels.
        max_width: The maximum width of the component in pixels.
        min_width: The minimum width of the component in pixels. It takes priority over the `max_width`.
        ratio: A list with the aspect ratio of the component. Specify the relative width first and then the relative height.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        url: typing.Optional[typing.Any] = None,
        *,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class VideoViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    url: typing.Optional[typing.Any]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    max_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]


class MapViewV1(BaseViewV1):
    """A component for displaying a map.

    For more information, see [view.map](https://toloka.ai/docs/template-builder/reference/view.map).

    Attributes:
        center: The coordinates of the map center. You can use:
            * A string. For example, `29.748713,-95.404287`
            * The [LocationData](toloka.client.project.template_builder.data.LocationData.md) to set Toloker's current position.
        markers: A list of map markers.
        polygons: A list of areas highlighted on the map.
        zoom: An initial map scale. Use values from 0 to 19. Higher values zoom in the map.
        hint: A hint text.
        label: A label above the component.
        validation: Validation rules.
    """

    class Marker(toloka.client.project.template_builder.base.BaseTemplate):
        """A map marker.

        Attributes:
            position: The coordinates of the marker. You can use:
                * A string. For example, `29.748713,-95.404287`.
                * The [LocationData](toloka.client.project.template_builder.data.LocationData.md) to set Toloker's current position.
            color: The marker color. Use the hexadecimal values preceded by the `#`. For example, `#f00` makes the marker red.
            label: A marker label.
        """

        def __init__(
            self,
            position: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            *,
            color: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None
        ) -> None:
            """Method generated by attrs for class MapViewV1.Marker.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        position: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        color: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]

    class Polygon(toloka.client.project.template_builder.base.BaseTemplate):
        """A map polygon.

        Attributes:
            points: A list of polygon coordinates.
                Specify the coordinates in the string format, for example `29.748713,-95.404287`.
            color: The color of the polygon. Use the hexadecimal values preceded by the `#`. For example, `#f00` makes the polygon red.
        """

        def __init__(
            self,
            points: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]]] = None,
            *,
            color: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None
        ) -> None:
            """Method generated by attrs for class MapViewV1.Polygon.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        points: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]]]
        color: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]

    def __init__(
        self,
        center: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        *,
        markers: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Marker]]]] = None,
        polygons: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Polygon]]]] = None,
        zoom: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class MapViewV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    center: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
    markers: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Marker]]]]
    polygons: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Polygon]]]]
    zoom: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]]
