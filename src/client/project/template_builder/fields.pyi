__all__ = [
    'BaseFieldV1',
    'AudioFieldV1',
    'ButtonRadioFieldV1',
    'GroupFieldOption',
    'ButtonRadioGroupFieldV1',
    'CheckboxFieldV1',
    'CheckboxGroupFieldV1',
    'DateFieldV1',
    'EmailFieldV1',
    'FileFieldV1',
    'ImageAnnotationFieldV1',
    'ListFieldV1',
    'MediaFileFieldV1',
    'NumberFieldV1',
    'PhoneNumberFieldV1',
    'RadioGroupFieldV1',
    'SelectFieldV1',
    'TextFieldV1',
    'TextAnnotationFieldV1',
    'TextareaFieldV1',
]
import toloka.client.project.template_builder.base
import toloka.util._extendable_enum
import typing


class BaseFieldV1Metaclass(toloka.client.project.template_builder.base.VersionedBaseComponentMetaclass):
    @staticmethod
    def __new__(
        mcs,
        name,
        bases,
        namespace,
        **kwargs
    ): ...


class BaseFieldV1(toloka.client.project.template_builder.base.BaseComponent, metaclass=BaseFieldV1Metaclass):
    """A base class for input data fields.

    Input fields are used to get data from Tolokers.

    Attributes:
        data: A data path.
        label: A label above the component.
        hint: A hint.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class BaseFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]


class AudioFieldV1(BaseFieldV1):
    """A component for recording audio.

    For more information, see [field.audio](https://toloka.ai/docs/template-builder/reference/field.audio).

    Attributes:
        data: A data path.
        multiple: * `True` — Multiple audio files can be recorded or uploaded.
            * `False` — A single file can be recorded or uploaded.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        multiple: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class AudioFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    multiple: typing.Optional[typing.Any]


class ButtonRadioFieldV1(BaseFieldV1):
    """A button to choose an answer.

    For more information, see [field.button-radio](https://toloka.ai/docs/template-builder/reference/field.button-radio).

    Attributes:
        data: A data path.
        value_to_set: A value to write to data.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        value_to_set: typing.Optional[typing.Any] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ButtonRadioFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    value_to_set: typing.Optional[typing.Any]


class GroupFieldOption(toloka.client.project.template_builder.base.BaseTemplate):
    """A single option for components with multiple options.

    Attributes:
        value: A value that is saved in data when the option is selected.
        label: An option text.
        hint: An additional description.
    """

    def __init__(
        self,
        value: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        *,
        hint: typing.Optional[typing.Any] = None
    ) -> None:
        """Method generated by attrs for class GroupFieldOption.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    value: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    hint: typing.Optional[typing.Any]


class ButtonRadioGroupFieldV1(BaseFieldV1):
    """A group of buttons for choosing one option.

    For more information, see [field.button-radio-group](https://toloka.ai/docs/template-builder/reference/field.button-radio-group).

    Attributes:
        data: A data path.
        options: A list of options.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.

    Examples:
        >>> import toloka.client.project.template_builder as tb
        >>> classification_buttons = tb.fields.ButtonRadioGroupFieldV1(
        >>>     data=tb.data.OutputData(path='class'),
        >>>     options=[
        >>>         tb.fields.GroupFieldOption('Cat', 'cat'),
        >>>         tb.fields.GroupFieldOption('Dog', 'dog'),
        >>>     ],
        >>>     validation=tb.conditions.RequiredConditionV1(hint='Choose one of the answer options'),
        >>> )
        ...
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]] = None,
        *,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ButtonRadioGroupFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]]


class CheckboxFieldV1(BaseFieldV1):
    """A checkbox.

    For more information, see [field.checkbox](https://toloka.ai/docs/template-builder/reference/field.checkbox).

    Attributes:
        data: A data path.
        disabled: Disabling the checkbox.
        preserve_false: * `False` — If the checkbox is not selected then `False` is not added to the output data.
            * `True` — The output data is always present whether the checkbox is selected or not.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        preserve_false: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class CheckboxFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    preserve_false: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class CheckboxGroupFieldV1(BaseFieldV1):
    """A group of checkboxes.

    This component creates a dictionary in the output data. Values from `options` are used as keys in the dictionary.

    For more information, see [field.checkbox-group](https://toloka.ai/docs/template-builder/reference/field.checkbox-group).

    Attributes:
        data: A data path.
        options: A list of options.
        disabled: Disabling the checkbox group.
        preserve_false: * `False` — If a checkbox from the group is not selected then its key is not added to the dictionary.
            * `True` — The output dictionary contains all keys whether checkboxes are selected or not.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        preserve_false: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class CheckboxGroupFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    preserve_false: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class DateFieldV1(BaseFieldV1):
    """A field for entering a date and time.

    For more information, see [field.date](https://toloka.ai/docs/template-builder/reference/field.date).

    Attributes:
        data: A data path.
        format: The format of the field:
            * `date-time` — Date and time.
            * `date` — Date only.
        block_list: A list of dates that a Toloker can't select.
        max: The latest date and time in the `YYYY-MM-DD hh:mm` format that a Toloker can select.
        min: The earliest date and time in the `YYYY-MM-DD hh:mm` format that a Toloker can select.
        placeholder: A text that is shown when no date is entered.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        format: typing.Optional[typing.Any] = None,
        *,
        block_list: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Any]]] = None,
        max: typing.Optional[typing.Any] = None,
        min: typing.Optional[typing.Any] = None,
        placeholder: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class DateFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    format: typing.Optional[typing.Any]
    block_list: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Any]]]
    max: typing.Optional[typing.Any]
    min: typing.Optional[typing.Any]
    placeholder: typing.Optional[typing.Any]


class EmailFieldV1(BaseFieldV1):
    """A field for entering an email address.

    For more information, see [field.email](https://toloka.ai/docs/template-builder/reference/field.email).

    Attributes:
        data: A data path.
        placeholder: A text that is shown when no address is entered.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        placeholder: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class EmailFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    placeholder: typing.Optional[typing.Any]


class FileFieldV1(BaseFieldV1):
    """A component for uploading files.

    For more information, see [field.file](https://toloka.ai/docs/template-builder/reference/field.file).

    Attributes:
        data: A data path.
        accept: A list of file types that can be uploaded.
            Use [MIME types](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).
            For example, `image/jpeg`.
            By default, you can upload any files.
        multiple: * `True` — Multiple files can be uploaded.
            * `False` — A single file can be uploaded.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        accept: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]]] = None,
        *,
        multiple: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class FileFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    accept: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]]]
    multiple: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class ImageAnnotationFieldV1(BaseFieldV1):
    """A component for annotating areas in an image.

    For more information, see [field.image-annotation](https://toloka.ai/docs/template-builder/reference/field.image-annotation).

    Attributes:
        data: A data path.
        image: The URL of the image.
        disabled: Disabling the component:
            * `False` — Annotating is allowed.
            * `True` — Annotating is disabled.

            Default value: `False`.
        full_height: If `True`, the component takes up all the vertical free space.
            Note, that the minimum height required by the component is 400 pixels.
        labels: Labels used to classify image areas.
        min_width: The minimum width of the component in pixels.
        ratio: A list with the aspect ratio of the component. Specify the relative width and then the height.
            This setting is not used if `full_height=True`.
        shapes: Area selection modes: `point`, `polygon`, and `rectangle`.
            Use mode names as keys in the `shapes` dictionary. Modes set to `True` are available in the component.
            By default, all modes are available.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    class Label(toloka.client.project.template_builder.base.BaseTemplate):
        """An image area class.

        Attributes:
            label: A text on a button for selecting the area class.
            value: A value used in output data.
        """

        def __init__(
            self,
            label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            value: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None
        ) -> None:
            """Method generated by attrs for class ImageAnnotationFieldV1.Label.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        value: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]

    class Shape(toloka.util._extendable_enum.ExtendableStrEnum):
        """An enumeration.
        """

        POINT = 'point'
        POLYGON = 'polygon'
        RECTANGLE = 'rectangle'

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        image: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        labels: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Label]]]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        shapes: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.Dict[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Shape], typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ImageAnnotationFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    image: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    labels: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Label]]]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]
    shapes: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.Dict[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Shape], typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]]]


class ListFieldV1(BaseFieldV1):
    """A component that allows a Toloker to add and remove list items, such as text fields.

    Use RelativeData(toloka.client.project.template_builder.data.RelativeData.md) in list items,
    otherwise all list items will change the same data.

    For more information, see [field.list](https://toloka.ai/docs/template-builder/reference/field.list).

    Attributes:
        data: A data path.
        render: A template for the list item.
        button_label: A text on a button that adds the list item.
        direction: The direction of the list:
            * `horizontal`
            * `vertical`
        editable: * `True` — A Toloker can add or remove list items.
            * `False` — The list can't be changed.

            Default value: `True`.
        max_length: The maximum number of list items.
        size: The distance between list items:
            * `s` — Small.
            * `m` — Medium.

            Default value: `m`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        render: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        button_label: typing.Optional[typing.Any] = None,
        direction: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListDirection]] = None,
        editable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        max_length: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        size: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListSize]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ListFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    render: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    button_label: typing.Optional[typing.Any]
    direction: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListDirection]]
    editable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    max_length: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    size: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.ListSize]]


class MediaFileFieldV1(BaseFieldV1):
    """A component for uploading media files.

    For more information, see [field.media-file](https://toloka.ai/docs/template-builder/reference/field.media-file).

    Attributes:
        data: A data path.
        accept: Selecting file sources. Every source adds an upload button.
        multiple: * `True` — Multiple files can be uploaded.
            * `False` — A single file can be uploaded.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.

    Examples:
        A component for uploading an image or taking a photo.

        >>> import toloka.client.project.template_builder as tb
        >>> image_loader = tb.fields.MediaFileFieldV1(
        >>>     label='Upload a photo',
        >>>     data=tb.data.OutputData(path='image'),
        >>>     validation=tb.conditions.RequiredConditionV1(),
        >>>     accept=tb.fields.MediaFileFieldV1.Accept(photo=True, gallery=True),
        >>>     multiple=False
        >>> )
        ...
    """

    class Accept(toloka.client.project.template_builder.base.BaseTemplate):
        """A choice of buttons for uploading media files from different sources.

        Attributes:
            file_system: Files from a file manager.
            gallery: Files from a gallery.
            photo: Taking photos.
            video: Taking videos.
        """

        def __init__(
            self,
            *,
            file_system: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
            gallery: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
            photo: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
            video: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None
        ) -> None:
            """Method generated by attrs for class MediaFileFieldV1.Accept.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        file_system: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
        gallery: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
        photo: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
        video: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        accept: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Accept]] = None,
        *,
        multiple: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class MediaFileFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    accept: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Accept]]
    multiple: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class NumberFieldV1(BaseFieldV1):
    """A field for entering a number.

    For more information, see [field.number](https://toloka.ai/docs/template-builder/reference/field.number).

    Attributes:
        data: A data path.
        maximum: The maximum number that can be entered.
        minimum: The minimum number that can be entered.
        placeholder: A text that is shown if no number is entered.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        maximum: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]] = None,
        minimum: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]] = None,
        placeholder: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class NumberFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    maximum: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]]
    minimum: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, int]]
    placeholder: typing.Optional[typing.Any]


class PhoneNumberFieldV1(BaseFieldV1):
    """A field for entering a phone number.

    For more information, see [field.phone-number](https://toloka.ai/docs/template-builder/reference/field.phone-number).

    Attributes:
        data: A data path.
        placeholder: A text that is shown if no phone number is entered.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        placeholder: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class PhoneNumberFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    placeholder: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]


class RadioGroupFieldV1(BaseFieldV1):
    """A component for selecting one value out of several options.

    For more information, see [field.radio-group](https://toloka.ai/docs/template-builder/reference/field.radio-group).

    Attributes:
        data: A data path.
        options: A list of options.
        disabled: Disabling the component:
            * `False` — Selecting an option is allowed.
            * `True` — Selecting an option is disabled.

            Default value: `False`.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.

    Examples:
        >>> import toloka.client.project.template_builder as tb
        >>> radio_group_field = tb.fields.RadioGroupFieldV1(
        >>>     data=tb.data.OutputData(path='result'),
        >>>     options=[
        >>>         tb.fields.GroupFieldOption('Cat', 'cat'),
        >>>         tb.fields.GroupFieldOption('Dog', 'dog'),
        >>>     ],
        >>>     validation=tb.conditions.RequiredConditionV1()
        >>> )
        ...
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class RadioGroupFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, GroupFieldOption]]]]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class SelectFieldV1(BaseFieldV1):
    """A field for selecting from a drop-down list of options.

    For more information, see [field.select](https://toloka.ai/docs/template-builder/reference/field.select).

    Attributes:
        data: A data path.
        options: A list of options.
        placeholder: A text that is shown if no option is selected.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    class Option(toloka.client.project.template_builder.base.BaseTemplate):
        """An option.

        Attributes:
            label: An option text.
            value: A value that is saved in data when the option is selected.
        """

        def __init__(
            self,
            label: typing.Optional[typing.Any] = None,
            value: typing.Optional[typing.Any] = None
        ) -> None:
            """Method generated by attrs for class SelectFieldV1.Option.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        label: typing.Optional[typing.Any]
        value: typing.Optional[typing.Any]

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Option]]]] = None,
        *,
        placeholder: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class SelectFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    options: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Option]]]]
    placeholder: typing.Optional[typing.Any]


class TextFieldV1(BaseFieldV1):
    """A field for entering a single text line.

    For more information, see [field.text](https://toloka.ai/docs/template-builder/reference/field.text).

    Attributes:
        data: A data path.
        disabled: Disabling the field:
            * `True` — A Toloker can't enter a text in the field.
            * `False` — Editing the field is allowed.

            Default value: `False`.
        placeholder: A text that is shown if no value is entered.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        placeholder: typing.Optional[typing.Any] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class TextFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    placeholder: typing.Optional[typing.Any]


class TextAnnotationFieldV1(BaseFieldV1):
    """A component for text annotation.

    For more information, see [field.text-annotation](https://toloka.ai/docs/template-builder/reference/field.text-annotation).

    Attributes:
        data: A data path.
        adjust: If `adjust` is set to `words`, entire words are selected and annotated.
            If `adjust` is omitted, any part of a text can be selected.
        content: A text for annotation.
        disabled: Disabling the component.
            Default value: `False`.
        labels: A list of annotation categories.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    class Label(toloka.client.project.template_builder.base.BaseTemplate):
        """An annotation category.

        Attributes:
            label: A category name.
            value: A value that is saved in data.
        """

        def __init__(
            self,
            label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
            value: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None
        ) -> None:
            """Method generated by attrs for class TextAnnotationFieldV1.Label.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        label: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
        value: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        adjust: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        content: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]] = None,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        labels: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Label]]]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class TextAnnotationFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    adjust: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
    content: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, str]]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    labels: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Label]]]]


class TextareaFieldV1(BaseFieldV1):
    """A field for entering multiline text.

    For more information, see [field.textarea](https://toloka.ai/docs/template-builder/reference/field.textarea).

    Attributes:
        data: A data path.
        disabled: * `False` — A Toloker can edit the field.
            * `True` — The field is disabled.

            Default value: `False`.
        placeholder: A text that is shown if the field is empty.
        resizable: * `True` — A Toloker can change the height of the field.
            * `False` — The field is not resizable.

            Default value: `True`.
        rows: The height of the field in text lines.
        hint: A hint.
        label: A label above the component.
        validation: Validation rules.
    """

    def __init__(
        self,
        data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        placeholder: typing.Optional[typing.Any] = None,
        resizable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        rows: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        hint: typing.Optional[typing.Any] = None,
        label: typing.Optional[typing.Any] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class TextareaFieldV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    data: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    hint: typing.Optional[typing.Any]
    label: typing.Optional[typing.Any]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    disabled: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    placeholder: typing.Optional[typing.Any]
    resizable: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    rows: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
