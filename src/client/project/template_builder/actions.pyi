__all__ = [
    'BaseActionV1',
    'BulkActionV1',
    'NotifyActionV1',
    'OpenCloseActionV1',
    'OpenLinkActionV1',
    'PlayPauseActionV1',
    'RotateActionV1',
    'SetActionV1',
    'ToggleActionV1',
]
import toloka.client.project.template_builder.base
import toloka.util._extendable_enum
import typing


class BaseActionV1(toloka.client.project.template_builder.base.BaseComponent, metaclass=toloka.client.project.template_builder.base.VersionedBaseComponentMetaclass):
    """A base class for actions.
    """

    def __init__(self, *, version: typing.Optional[str] = '1.0.0') -> None:
        """Method generated by attrs for class BaseActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]


class BulkActionV1(BaseActionV1):
    """A group of actions to be called together.

    For more information, see [action.bulk](https://toloka.ai/docs/template-builder/reference/action.bulk).

    Attributes:
        payload: A list of actions.
    """

    def __init__(
        self,
        payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class BulkActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]]


class NotifyActionV1(BaseActionV1):
    """The action shows a popup message.

    For more information, see [action.notify](https://toloka.ai/docs/template-builder/reference/action.notify).

    Attributes:
        payload: Popup parameters.
    """

    class Payload(toloka.client.project.template_builder.base.BaseTemplate):
        """Popup parameters.

        Attributes:
            content: Popup content. You can assign text or other components to the `content`.
            theme: A background color.
            delay: A delay in milliseconds before showing the popup.
            duration: A duration in milliseconds of showing the popup. It includes the delay.
        """

        class Theme(toloka.util._extendable_enum.ExtendableStrEnum):
            """The background color of a popup.

            Attributes:
                INFO: Blue.
                SUCCESS: Green.
                WARNING: Yellow.
                DANGER: Red.
            """

            DANGER = 'danger'
            INFO = 'info'
            SUCCESS = 'success'
            WARNING = 'warning'

        def __init__(
            self,
            content: typing.Optional[typing.Any] = None,
            theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Theme]] = None,
            *,
            delay: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
            duration: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None
        ) -> None:
            """Method generated by attrs for class NotifyActionV1.Payload.
            """
            ...

        _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
        content: typing.Optional[typing.Any]
        theme: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Theme]]
        delay: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
        duration: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]

    def __init__(
        self,
        payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Payload]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class NotifyActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Payload]]


class OpenCloseActionV1(BaseActionV1):
    """The action changes the display mode of another component.

    It can expand an [image](toloka.client.project.template_builder.view.ImageViewV1.md) to a full screen
    or collapse a [section](toloka.client.project.template_builder.view.CollapseViewV1.md).

    For more information, see [action.open-close](https://toloka.ai/docs/template-builder/reference/action.open-close).

    Attributes:
        view: References the component to perform the action with.
    """

    def __init__(
        self,
        view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class OpenCloseActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]]


class OpenLinkActionV1(BaseActionV1):
    """The action opens an URL in a new browser tab.

    For more information, see [action.open-link](https://toloka.ai/docs/template-builder/reference/action.open-link).

    Attributes:
        payload: The URL.
    """

    def __init__(
        self,
        payload: typing.Optional[typing.Any] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class OpenLinkActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    payload: typing.Optional[typing.Any]


class PlayPauseActionV1(BaseActionV1):
    """The action pauses an audio or video player or resumes it.

    For more information, see [action.play-pause](https://toloka.ai/docs/template-builder/reference/action.play-pause).

    Attributes:
        view: A reference to the audio or video player.
    """

    def __init__(
        self,
        view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class PlayPauseActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]]


class RotateActionV1(BaseActionV1):
    """The action rotates a component by 90 degrees.

    For more information, see [action.rotate](https://toloka.ai/docs/template-builder/reference/action.rotate).

    Attributes:
        view: A reference to the component.
        payload: The direction of rotation.
    """

    class Payload(toloka.util._extendable_enum.ExtendableStrEnum):
        """An enumeration.
        """

        LEFT = 'left'
        RIGHT = 'right'

    def __init__(
        self,
        view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]] = None,
        payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Payload]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class RotateActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    view: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]]
    payload: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, Payload]]


class SetActionV1(BaseActionV1):
    """The action sets the value of a data field.

    For more information, see [action.set](https://toloka.ai/docs/template-builder/reference/action.set).

    Example:
        The [hot key](toloka.client.project.template_builder.plugins.HotkeysPluginV1.md) `1`
        fills a [text field](toloka.client.project.template_builder.fields.TextFieldV1.md) with a predefined text.
        The [RefComponent](toloka.client.project.template_builder.base.RefComponent.md) is used to reference the output data field.

        >>> from toloka.client.project.template_builder import *
        >>>
        >>> tb_config = TemplateBuilder(
        >>>     vars={'0': OutputData('result')},
        >>>     view=TextFieldV1(
        >>>         data=RefComponent('vars.0'),
        >>>         label=InputData('question'),
        >>>     ),
        >>>     plugins=[
        >>>         HotkeysPluginV1(
        >>>             key_1=SetActionV1(
        >>>                 data=RefComponent('vars.0'),
        >>>                 payload='It is not a question'
        >>>             )
        >>>         )
        >>>     ]
        >>> )
        ...

    Attributes:
        data: The data field to set.
        payload: The value.
    """

    def __init__(
        self,
        data: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]] = None,
        payload: typing.Optional[typing.Any] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class SetActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    data: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]]
    payload: typing.Optional[typing.Any]


class ToggleActionV1(BaseActionV1):
    """The action toggles the value of a boolean data field.

    For more information, see [action.toggle](https://toloka.ai/docs/template-builder/reference/action.toggle).

    Attributes:
        data: The data field.
    """

    def __init__(
        self,
        data: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]] = None,
        *,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ToggleActionV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    version: typing.Optional[str]
    data: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, toloka.client.project.template_builder.base.RefComponent]]
