__all__ = [
    'SpeedQualityBalanceConfig',
    'TopPercentageByQuality',
    'BestConcurrentUsersByQuality',
]
import toloka.client.primitives.base
import toloka.util._extendable_enum
import typing


class SpeedQualityBalanceConfig(toloka.client.primitives.base.BaseTolokaObject):
    """A configuration of selecting Tolokers based on a personalized quality forecast.

    Tolokers are sorted by their quality forecast. You can limit the number of the best Tolokers who have access to your tasks.
    It influences quality of results and speed of getting results.

    Learn more about [Speed/quality balance](https://toloka.ai/en/docs/guide/concepts/adjust).
    """

    class Type(toloka.util._extendable_enum.ExtendableStrEnum):
        """The type of the filter used in [SpeedQualityBalanceConfig](toloka.client.pool.speed_quality_balance_config.SpeedQualityBalanceConfig.md).

        Attributes:
            TOP_PERCENTAGE_BY_QUALITY: A percentage of the best Tolokers is configured.
            BEST_CONCURRENT_USERS_BY_QUALITY: A maximum number of the best Tolokers is configured.
        """

        TOP_PERCENTAGE_BY_QUALITY = 'TOP_PERCENTAGE_BY_QUALITY'
        BEST_CONCURRENT_USERS_BY_QUALITY = 'BEST_CONCURRENT_USERS_BY_QUALITY'

    def __init__(self) -> None:
        """Method generated by attrs for class SpeedQualityBalanceConfig.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]


class TopPercentageByQuality(SpeedQualityBalanceConfig):
    """`SpeedQualityBalanceConfig` that uses percentage of Tolokers.
    """

    def __init__(self, *, percent: typing.Optional[int] = None) -> None:
        """Method generated by attrs for class TopPercentageByQuality.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    percent: typing.Optional[int]


class BestConcurrentUsersByQuality(SpeedQualityBalanceConfig):
    """`SpeedQualityBalanceConfig` that uses a maximum number of Tolokers.
    """

    def __init__(self, *, count: typing.Optional[int] = None) -> None:
        """Method generated by attrs for class BestConcurrentUsersByQuality.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    count: typing.Optional[int]
